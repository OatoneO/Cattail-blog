{
  "meta": {
    "category": "HTML",
    "keywords": [
      "HTML",
      "Element",
      "Tag",
      "Attribute",
      "Form",
      "Input",
      "Table",
      "List"
    ],
    "timestamp": "2025-04-07T07:54:25.749Z"
  },
  "documents": [
    {
      "title": "HTML",
      "slug": "glossary/html",
      "url": "https://developer.mozilla.org/zh-CN/docs/glossary/html",
      "summary": "HTML（HyperText Markup Language，超文本标记语言）是一种用于定义网页结构的描述语言。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "<html>：HTML 文档/根元素",
      "slug": "web/html/element/html",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/html/element/html",
      "summary": "HTML <html> 元素表示 HTML 文档的根（顶级元素），所以它也被称为根元素。其他所有元素必须是此元素的后代。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "element.innerHTML",
      "slug": "web/api/element/innerhtml",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/element/innerhtml",
      "summary": "Element.innerHTML 属性设置或获取 HTML 语法表示的元素的后代。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "HTML DOM API",
      "slug": "web/api/html_dom_api",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/html_dom_api",
      "summary": "HTML DOM API 由一系列接口组成，它们定义了 HTML 中每个元素的功能，以及它们所依赖的任何支持类型和接口。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "HTML 基础",
      "slug": "learn_web_development/getting_started/your_first_website/creating_the_content",
      "url": "https://developer.mozilla.org/zh-CN/docs/learn_web_development/getting_started/your_first_website/creating_the_content",
      "summary": "超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用来结构化 Web 网页及其内容的标记语言。网页内容可以是：一组段落、一个重点信息列表、也可以含有图片和数据表格。正如标题所示，本文将对 HTML 及其功能做一个基本介绍。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "HTML 调试",
      "slug": "learn_web_development/core/structuring_content/debugging_html",
      "url": "https://developer.mozilla.org/zh-CN/docs/learn_web_development/core/structuring_content/debugging_html",
      "summary": "HTML 优雅明了，但要是出了错，你会不会一头雾水呢，本节将介绍一些查找和修复 HTML 错误的工具。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "element.outerHTML",
      "slug": "web/api/element/outerhtml",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/element/outerhtml",
      "summary": "element DOM 接口的outerHTML属性获取描述元素（包括其后代）的序列化 HTML 片段。它也可以设置为用从给定字符串解析的节点替换元素。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "HTML 参考",
      "slug": "web/html/reference",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/html/reference",
      "summary": "这篇 HTML 参考描述了 HTML 中所有的元素和属性，包含适用于所有元素的全局属性。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "HTML 拖放 API",
      "slug": "web/api/html_drag_and_drop_api",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/html_drag_and_drop_api",
      "summary": "HTML 拖放（Drag and Drop）接口使应用程序能够在浏览器中使用拖放功能。例如，用户可使用鼠标选择可拖拽（draggable）元素，将元素拖拽到可放置（droppable）元素，并释放鼠标按钮以放置这些元素。拖拽操作期间，会有一个可拖拽元素的半透明快照跟随着鼠标指针。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "element.insertAdjacentHTML",
      "slug": "web/api/element/insertadjacenthtml",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/element/insertadjacenthtml",
      "summary": "insertAdjacentHTML() 方法将指定的文本解析为 Element 元素，并将结果节点插入到 DOM 树中的指定位置。它不会重新解析它正在使用的元素，因此它不会破坏元素内的现有元素。这避免了额外的序列化步骤，使其比直接使用 innerHTML 操作更快。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Element",
      "slug": "web/api/element",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/element",
      "summary": "Element 是最通用的基类，Document 中的所有元素对象（即表示元素的对象）都继承自它。它只具有各种元素共有的方法和属性。更具体的类则继承自 Element。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "element",
      "slug": "web/css/element",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/css/element",
      "summary": "CSS 函数 element() 定义了一个从任意的 HTML 元素中生成的图像 <image> 值。该图像值是实时的，这意味着如果被指定的 HTML 元素被更改，the CSS properties using the resulting value are automatically updated.",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Element：elementTiming 属性",
      "slug": "web/api/element/elementtiming",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/element/elementtiming",
      "summary": "Element 接口的 elementTiming 属性用于标识在 PerformanceElementTiming API 中观测的元素。elementTiming 属性反映了 elementtiming HTML 属性的值。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "HTMLIFrameElement",
      "slug": "web/api/htmliframeelement",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/htmliframeelement",
      "summary": "HTMLIFrameElement 接口提供了除 HTMLElement 之外的一些特殊属性和方法（当然也包括了继承自 HTMLElement 的部分）。这些方法用于操作内联 frame 元素的布局和展示。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "HTMLImageElement",
      "slug": "web/api/htmlimageelement",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/htmlimageelement",
      "summary": "HTMLImageElement 接口提供了特别的属性和方法 (在常规的 HTMLElement之外，它也能通过继承使用) 来操纵 <img> 元素的布局和图像。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "HTMLAnchorElement",
      "slug": "web/api/htmlanchorelement",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/htmlanchorelement",
      "summary": "HTMLAnchorElement 接口表示超链接元素，并为操控此类元素的布局和表现提供特殊的属性和方法（除了常规 HTMLElement 接口之外，它还可以通过继承来使用）。此接口对应于 <a> 元素；不要与由 HTMLLinkElement 表示的 <link> 元素相混淆。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "HTMLTableElement",
      "slug": "web/api/htmltableelement",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/htmltableelement",
      "summary": "HTMLTableElement 接口在常用的 HTMLElement 接口的基础上，提供了专门的属性和方法来处理 HTML 文档中表格的布局与展示。通过继承，它也可以访问父接口 HTMLElement 中的成员。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "HTMLObjectElement",
      "slug": "web/api/htmlobjectelement",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/htmlobjectelement",
      "summary": "HTMLObjectElement 接口提供特定的属性和方法（除了常规 HTMLElement 接口之外，它还可以通过继承来使用），用于操作 <object> 元素（代表外部资源）的布局和呈现。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "HTMLBodyElement",
      "slug": "web/api/htmlbodyelement",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/htmlbodyelement",
      "summary": "HTMLBodyElement 接口提供了用于操作 <body> 元素的特定属性（除继承自 HTMLElement 接口的属性以外）。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "HTMLLinkElement",
      "slug": "web/api/htmllinkelement",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/htmllinkelement",
      "summary": "HTMLLinkElement 接口表示外部资源的来源地址以及这些资源与文档之间的关系（对应于 <link> 元素；不要与 <a> 混淆，后者由 HTMLAnchorElement 表示）。此对象继承 HTMLElement 接口的所有属性和方法。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Element.tagName",
      "slug": "web/api/element/tagname",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/element/tagname",
      "summary": "返回当前元素的标签名",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Symbol.toStringTag",
      "slug": "web/javascript/reference/global_objects/symbol/tostringtag",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/javascript/reference/global_objects/symbol/tostringtag",
      "summary": "Symbol.toStringTag 内置通用（well-known）symbol 是一个字符串值属性，用于创建对象的默认字符串描述。它由 Object.prototype.toString() 方法内部访问。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Notification：tag 属性",
      "slug": "web/api/notification/tag",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/notification/tag",
      "summary": "Notification 接口的 tag 只读属性表示通知的识别标签。此属性通过 Notification() 构造函数的 tag 选项中指定。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Document.getElementsByTagName()",
      "slug": "web/api/document/getelementsbytagname",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/document/getelementsbytagname",
      "summary": "返回一个包括所有给定标签名称的元素的 HTML 集合HTMLCollection。整个文件结构都会被搜索，包括根节点。返回的 HTML 集合是动态的，意味着它可以自动更新自己来保持和 DOM 树的同步而不用再次调用 document.getElementsByTagName()。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "element.getElementsByTagName",
      "slug": "web/api/element/getelementsbytagname",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/element/getelementsbytagname",
      "summary": "Element.getElementsByTagName() 方法返回一个动态的包含所有指定标签名的元素的 HTML 集合HTMLCollection。指定的元素的子树会被搜索，不包括元素自己。返回的列表是动态的，这意味着它会随着 DOM 树的变化自动更新自身。所以，使用相同元素和相同参数时，没有必要多次的调用Element.getElementsByTagName() .",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "SyncEvent：tag 属性",
      "slug": "web/api/syncevent/tag",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/syncevent/tag",
      "summary": "SyncEvent 接口的 tag 只读属性将返回开发人员为此 SyncEvent 定义的标识符。这是通过 SyncEvent() 构造函数的 tag 参数传递的值。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Document.getElementsByTagNameNS()",
      "slug": "web/api/document/getelementsbytagnamens",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/document/getelementsbytagnamens",
      "summary": "返回带有指定名称和命名空间的元素集合。整个文件结构都会被搜索，包括根节点。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Element.getElementsByTagNameNS()",
      "slug": "web/api/element/getelementsbytagnamens",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/element/getelementsbytagnamens",
      "summary": "Element.getElementsByTagNameNS() 方法返回在指定命名空间内带有指定名称的动态 HTML 元素集合（而不是快照），搜索范围限定于指定元素的后代，类似于Document.getElementsByTagNameNS。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "使用 JavaScript 和 DOM 接口遍历 HTML 表格",
      "slug": "web/api/document_object_model/traversing_an_html_table_with_javascript_and_dom_interfaces",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/document_object_model/traversing_an_html_table_with_javascript_and_dom_interfaces",
      "summary": "本文概述了一些强大的，基本的 DOM 1 级别中的方法以及如何在 JavaScript 中使用它们。你将会如何动态地创建、访问、控制以及移除 HTML 元素。这里提到的 DOM 方法，并非是 HTML 专有的；它们在 XML 中同样适用。这里提供的演示在任何现代浏览器中都能正常工作。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "attributeType",
      "slug": "web/svg/reference/attribute/attributetype",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/svg/reference/attribute/attributetype",
      "summary": "该属性指定目标属性和它相对应的值处于哪个命名空间里。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "attributeName",
      "slug": "web/svg/reference/attribute/attributename",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/svg/reference/attribute/attributename",
      "summary": "attributeName 属性表示动画期间将要更改的目标元素的 CSS 属性或属性的名称。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Element.getAttribute()",
      "slug": "web/api/element/getattribute",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/element/getattribute",
      "summary": "getAttribute() 返回元素上一个指定的属性值。如果指定的属性不存在，则返回 null 或 \"\" （空字符串）；具体细节，请参阅 Notes 部分。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "document.createAttribute()",
      "slug": "web/api/document/createattribute",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/document/createattribute",
      "summary": "Document.createAttribute() 方法创建并返回一个新的属性节点。这个对象创建一个实现了 Attr 接口的节点。这个方式下 DOM 不限制节点能够添加的属性种类。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "属性（Attribute）",
      "slug": "glossary/attribute",
      "url": "https://developer.mozilla.org/zh-CN/docs/glossary/attribute",
      "summary": "属性（Attribute）可扩展 HTML 或 XML 元素，改变其行为或提供元数据。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Element.getAttributeNames()",
      "slug": "web/api/element/getattributenames",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/element/getattributenames",
      "summary": "Element.getAttributeNames() 返回一个Array，该数组包含指定元素（Element）的所有属性名称，如果该元素不包含任何属性，则返回一个空数组。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Element：setAttribute() 方法",
      "slug": "web/api/element/setattribute",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/element/setattribute",
      "summary": "Element 接口的 setAttribute() 方法用于设置指定元素上的某个属性值。如果属性已经存在，则更新该值；否则，使用指定的名称和值添加一个新的属性。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Element：toggleAttribute() 方法",
      "slug": "web/api/element/toggleattribute",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/element/toggleattribute",
      "summary": "Element 接口的 toggleAttribute() 方法翻转给定元素的某个布尔属性的状态（如果属性存在则移除，属性不存在则添加）。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Element：removeAttribute() 方法",
      "slug": "web/api/element/removeattribute",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/element/removeattribute",
      "summary": "Element 的 removeAttribute() 方法移除当前元素上具有指定名称的属性。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Element：hasAttribute() 方法",
      "slug": "web/api/element/hasattribute",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/element/hasattribute",
      "summary": "Element.hasAttribute() 方法返回一个表示当前元素的指定属性是否存在的布尔值。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "FormData",
      "slug": "web/api/formdata",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/formdata",
      "summary": "FormData 接口提供了一种表示表单数据的键值对 key/value 的构造方式，并且可以轻松的将数据通过XMLHttpRequest.send() 方法发送出去，本接口和此方法都相当简单直接。如果送出时的编码类型被设为 \"multipart/form-data\"，它会使用和表单一样的格式。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "FormData()",
      "slug": "web/api/formdata/formdata",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/formdata/formdata",
      "summary": "FormData() 构造函数用于创建一个新的FormData对象。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "form.submit",
      "slug": "web/api/htmlformelement/submit",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/htmlformelement/submit",
      "summary": "HTMLFormElement.submit() 用来提交表单 <form>。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "FormDataEvent：formData 属性",
      "slug": "web/api/formdataevent/formdata",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/formdataevent/formdata",
      "summary": "FormDataEvent 接口的只读属性 formData 包含 FormData 对象，该对象表示在事件触发时，表单中包含的数据。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "FormDataEvent",
      "slug": "web/api/formdataevent",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/formdataevent",
      "summary": "FormDataEvent 接口表示 formdata 事件——此事件在表示表单数据的条目列表构造之后，在 HTMLFormElement 对象上触发。提交表单时会发生这种情况，但也可以通过调用 FormData() 构造函数来触发。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "CSP: form-action",
      "slug": "web/http/reference/headers/content-security-policy/form-action",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/http/reference/headers/content-security-policy/form-action",
      "summary": "HTTP Content-Security-Policy (CSP) 的 form-action 指令能够限定当前页面中表单的提交地址。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "FormData.append()",
      "slug": "web/api/formdata/append",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/formdata/append",
      "summary": "FormData 接口的 append() 方法会添加一个新值到 FormData 对象内的一个已存在的键中，如果键不存在则会添加该键。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "FormData.set()",
      "slug": "web/api/formdata/set",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/formdata/set",
      "summary": "set() 方法会对 FormData 对象里的某个 key 设置一个新的值，如果该 key 不存在，则添加。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "Request.formData()",
      "slug": "web/api/request/formdata",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/request/formdata",
      "summary": "Request 接口的 formData() 方法读取请求体并将其作为 promise 返回，该 promise 将兑现一个 FormData 对象。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "FormData.keys()",
      "slug": "web/api/formdata/keys",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/formdata/keys",
      "summary": "FormData.keys() 该方法返回一个迭代器（iterator），遍历了该 formData 包含的所有 key，这些 key 是 USVString 对象。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "InputEvent",
      "slug": "web/api/inputevent",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/inputevent",
      "summary": "InputEvent 接口表示通知用户可编辑内容更改的事件。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "InputEvent：inputType 属性",
      "slug": "web/api/inputevent/inputtype",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/inputevent/inputtype",
      "summary": "InputEvent 接口中的只读属性 inputType 返回对可编辑内容所做更改的类型。可能的更改包括插入、删除和格式化文本。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "omnibox.onInputEntered",
      "slug": "mozilla/add-ons/webextensions/api/omnibox/oninputentered",
      "url": "https://developer.mozilla.org/zh-CN/docs/mozilla/add-ons/webextensions/api/omnibox/oninputentered",
      "summary": "当用户选中扩展添加到地址栏下拉菜单的任一推荐时触发。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "-moz-user-input",
      "slug": "web/css/-moz-user-input",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/css/-moz-user-input",
      "summary": "在 Mozilla 应用程序中，-moz-user-input 决定元素是否将接受用户输入。A 类似的属性 user-focus 是在CSS3 UI 规范的前身的早期草案中提出的，但被工作组拒绝。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "omnibox.onInputChanged",
      "slug": "mozilla/add-ons/webextensions/api/omnibox/oninputchanged",
      "url": "https://developer.mozilla.org/zh-CN/docs/mozilla/add-ons/webextensions/api/omnibox/oninputchanged",
      "summary": "与你的扩展已经开始交互（在用户在地址栏中输入了扩展的关键词以及一个空格）的情况下，当用户的输入变化时触发。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "RegExp.input ($_)",
      "slug": "web/javascript/reference/global_objects/regexp/input",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/javascript/reference/global_objects/regexp/input",
      "summary": "input 非标准属性是正则表达式静态属性，含有正则表达式所匹配的字符串。RegExp.$_是这个属性的别名。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "omnibox.onInputStarted",
      "slug": "mozilla/add-ons/webextensions/api/omnibox/oninputstarted",
      "url": "https://developer.mozilla.org/zh-CN/docs/mozilla/add-ons/webextensions/api/omnibox/oninputstarted",
      "summary": "当用户开始与扩展交互（在地址栏输入扩展的关键词以及一个空格）时触发。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "omnibox.onInputCancelled",
      "slug": "mozilla/add-ons/webextensions/api/omnibox/oninputcancelled",
      "url": "https://developer.mozilla.org/zh-CN/docs/mozilla/add-ons/webextensions/api/omnibox/oninputcancelled",
      "summary": "当用户取消与扩展交互（比如点击地址栏之外的地方）时触发。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "InputEvent：InputEvent() 构造函数",
      "slug": "web/api/inputevent/inputevent",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/inputevent/inputevent",
      "summary": "InputEvent() 构造函数创建一个新的 InputEvent 对象。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "<input type=\"tel\">",
      "slug": "web/html/element/input/tel",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/html/element/input/tel",
      "summary": "tel 类型的 <input> 元素用于让用户输入和编辑电话号码。不同于 <input type=\"email\"> 和 <input type=\"url\">，在提交表单之前，输入值不会被自动验证为特定格式，因为世界各地的电话号码格式差别很大。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "table-layout",
      "slug": "web/css/table-layout",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/css/table-layout",
      "summary": "table-layout CSS 属性定义了用于布局表格的单元格、行和列的算法。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "CSS Table",
      "slug": "web/css/css_table",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/css/css_table",
      "summary": "CSS Table 是一个定义如何展示表格数据的 CSS 模块。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "WebAssembly.Table",
      "slug": "webassembly/reference/javascript_interface/table",
      "url": "https://developer.mozilla.org/zh-CN/docs/webassembly/reference/javascript_interface/table",
      "summary": "WebAssembly.Table 是代表 WebAssembly Table 的 JavaScript 包装对象，具有类数组结构，存储了多个函数引用。在 JavaScript 或者 WebAssemble 中创建的 Table 对象可以同时被 JavaScript 或 WebAssembly 访问和更改。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "<table>：表格元素",
      "slug": "web/html/element/table",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/html/element/table",
      "summary": "HTML <table> 元素表示表格数据——即在一个由包含数据的行和列组成的二维表格中呈现的信息。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "console：table() 静态方法",
      "slug": "web/api/console/table_static",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/console/table_static",
      "summary": "将数据以表格的形式显示。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "HTML 表格基础",
      "slug": "learn_web_development/core/structuring_content/html_table_basics",
      "url": "https://developer.mozilla.org/zh-CN/docs/learn_web_development/core/structuring_content/html_table_basics",
      "summary": "本文将从 HTML 表格开始，介绍一些基本的内容，如行和单元格、标题、使单元格跨越多个列和行，以及如何将列中的所有单元组合在一起进行样式化。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "<tr>：表格行元素",
      "slug": "web/html/element/tr",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/html/element/tr",
      "summary": "HTML <tr> 元素定义了表格中的一行单元格。然后可以使用 <td>（数据单元格）和 <th>（标题单元格）元素的组合来建立该行的单元格。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "EventTarget.addEventListener()",
      "slug": "web/api/eventtarget/addeventlistener",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/eventtarget/addeventlistener",
      "summary": "EventTarget.addEventListener() 方法将指定的监听器注册到 EventTarget 上，当该对象触发指定的事件时，指定的回调函数就会被执行。事件目标可以是一个文档上的元素 Element、Document 和 Window，也可以是任何支持事件的对象（比如 XMLHttpRequest）。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "NodeList",
      "slug": "web/api/nodelist",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/nodelist",
      "summary": "NodeList 对象是节点的集合，通常是由属性，如Node.childNodes 和 方法，如document.querySelectorAll 返回的。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "DOMTokenList",
      "slug": "web/api/domtokenlist",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/domtokenlist",
      "summary": "DOMTokenList 接口表示一组空格分隔的标记（tokens）。如由 Element.classList、HTMLLinkElement.relList、HTMLAnchorElement.relList 或 HTMLAreaElement.relList 返回的一组值。它和 JavaScript Array 对象一样，索引从 0 开始。DOMTokenList 总是区分大小写（case-sensitive）。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "list-style",
      "slug": "web/css/list-style",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/css/list-style",
      "summary": "list-style CSS 属性是一个简写对属性集合，包括list-style-type, list-style-image, 和 list-style-position。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "MediaList",
      "slug": "web/api/medialist",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/medialist",
      "summary": "MediaList 接口表示样式表的媒体查询，例如使用了 media 属性的<link> 元素。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "TouchList",
      "slug": "web/api/touchlist",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/touchlist",
      "summary": "TouchList 接口代表一个触摸平面上所有触点的列表。例如，如果一个用户用三根手指接触屏幕（或者触控板），与之对应的 TouchList 会包含每根手指的 Touch 对象，总共三个。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "CSSRuleList",
      "slug": "web/api/cssrulelist",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/cssrulelist",
      "summary": "CSS 规则列表 CSSRuleList 是一个（只允许间接更改的）类数组对象，包含着一个 CSSRule 对象的有序集合。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "CSSValueList",
      "slug": "web/api/cssvaluelist",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/cssvaluelist",
      "summary": "CSSValueList 接口继承自 CSSValue 接口，提供了一种 CSS 值的有序集合的抽象。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "FileList",
      "slug": "web/api/filelist",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/filelist",
      "summary": "FileList 接口表示由 HTML <input> 元素的 files 属性返回的该类型的对象；这使你可以访问使用 <input type=\"file\"> 元素选择的文件列表。它还用于使用拖放 API 中放入 Web 内容中的文件列表；有关此用法的详细信息，请参阅 DataTransfer 对象。",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "DOMStringList",
      "slug": "web/api/domstringlist",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/api/domstringlist",
      "summary": "某些 API 会返回的包含一列DOMString的一种类型",
      "category": "Other",
      "popularity": 0
    },
    {
      "title": "list-style-type",
      "slug": "web/css/list-style-type",
      "url": "https://developer.mozilla.org/zh-CN/docs/web/css/list-style-type",
      "summary": "CSS 属性 list-style-type 可以设置列表元素的 marker（比如圆点、符号、或者自定义计数器样式）。",
      "category": "Other",
      "popularity": 0
    }
  ]
}